# -*- coding: utf-8 -*-
"""Merging by comparing first 4 characters.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Em5HpHbjD92dyegu8vNpMEZaYV3hdjo9
"""

import csv

def merge_rows(data, column_index):
    merged_data = []
    current_value = None
    current_row = None

    for row in data:
        value = row[column_index][:8]
        if current_value is None or value != current_value:
            if current_row is not None:
                merged_data.append(current_row)
            current_value = value
            current_row = row.copy()
        else:
            current_row[column_index] += row[column_index]

    if current_row is not None:
        merged_data.append(current_row)

    return merged_data

with open("sen.csv", "r") as file:
    reader = csv.reader(file)
    data = [row for row in reader]

merged_data = merge_rows(data, 0)

with open("merged_data4.csv", "w", newline="") as file:
    writer = csv.writer(file)
    for row in merged_data:
        writer.writerow(row)

from google.colab import files

with open("merged_data4.csv", "w", newline="") as file:
    writer = csv.writer(file)
    for row in merged_data:
        writer.writerow(row)

files.download("merged_data4.csv")

"""deleting rows if they are similar"""

import csv

def delete_rows(data, column_index):
    unique_data = []
    current_value = None

    for row in data:
        value = row[column_index][:3]
        if current_value is None or value != current_value:
            unique_data.append(row)
            current_value = value

    return unique_data

with open("sen.csv", "r") as file:
    reader = csv.reader(file)
    data = [row for row in reader]
unique_data = delete_rows(data, 6)

with open("unique_data.csv", "w", newline="") as file:
    writer = csv.writer(file)
    for row in unique_data:
        writer.writerow(row)

from google.colab import files

with open("unique_data.csv", "w", newline="") as file:
    writer = csv.writer(file)
    for row in merged_data:
        writer.writerow(row)

files.download("unique_data.csv")